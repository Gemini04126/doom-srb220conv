class SuperRingMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Super Ring monitor";
	}
	States
	{
		Spawn:
			SRBX A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("SuperRingIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class SuperRingIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("misc/i_pkup");
		A_GiveInventory("Ring", 10, AAPTR_TARGET);
		// cash money
		// RLP (Gemini0)
		string moneyType = "RLP_Currency";
		class<Actor> moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 10); // idk how much rlp will give per coin or whatever ($10)
		// Pandora's Wrath (Gemini0, Mengo, JM2098)
		moneyType = "GWM_PandoraPoints";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 50); // 50 points
		// BNDoom / any other mod with Zenny (Gemini0)
		moneyType = "Zenny";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 250); // why you would EVER play BNDoom with this... i have no fucking idea (250 Zenny)
		// HXRTC (Hexereticdoom)
		moneyType = "BronzeCoinBonus";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 10); // $250
		// DoomRLA Zeta-dimensional shop (Simon-v, Yholl)
		moneyType = "ZSCreditChip";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 250); // 250 credits
		// Dino Crisis 2 Weapons (Dr_Cosmobyte)
		moneyType = "DC2BronzeCoin";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 10); // 10000 points
		// Psychic (Xaser)
		moneyType = "BloodCoin25";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 10); // $250
	}
	States
	{
		Spawn:
			SRBX B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class ExtraLifeMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Extra Life monitor";
	}
	States
	{
		Spawn:
			QUES A 2;	// PRUP in 1094
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("ExtraLifeIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class ExtraLifeIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		target.A_StartSound("sfx/1up", flags: CHANF_UI|CHANF_LOCAL|CHANF_OVERLAP);
		A_GiveInventory("Ring", 100, AAPTR_TARGET);
		// cash money
		// RLP (Gemini0)
		string moneyType = "RLP_Currency";
		class<Actor> moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 100); // idk how much rlp will give per coin or whatever ($100)
		// Pandora's Wrath (Gemini0, Mengo, JM2098)
		moneyType = "GWM_PandoraPoints";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 500); // 500 points
		// BNDoom / any other mod with Zenny (Gemini0)
		moneyType = "Zenny";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 2500); // why you would EVER play BNDoom with this... i have no fucking idea (2500 Zenny)
		// HXRTC (Hexereticdoom)
		moneyType = "BronzeCoinBonus";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 100); // $2500
		// DoomRLA Zeta-dimensional shop (Simon-v, Yholl)
		moneyType = "ZSCreditChip";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 2500); // 2500 credits
		// Dino Crisis 2 Weapons (Dr_Cosmobyte)
		moneyType = "DC2BronzeCoin";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 100); // 100000 points
		// Psychic (Xaser)
		moneyType = "BloodCoin25";
		moneyTypeExists = moneyType;
		if (moneyTypeExists)
			target.GiveInventory(moneyType, 100); // $2500
	}
	States
	{
		Spawn:
			QUES B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class AttractionShieldMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Attraction Shield monitor";
	}
	States
	{
		Spawn:
			YLTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("AttractionShieldIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class AttractionShieldIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("sfx/shield");
	}
	States
	{
		Spawn:
			YLTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class ForceShieldMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Force Shield monitor";
	}
	States
	{
		Spawn:
			BLTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("ForceShieldIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class ForceShieldIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("sfx/shield");
	}
	States
	{
		Spawn:
			BLTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class ElementalShieldMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Elemental Shield monitor";
	}
	States
	{
		Spawn:
			GRTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("ElementalShieldIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class ElementalShieldIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("sfx/shield");
	}
	States
	{
		Spawn:
			GRTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class AtomicShieldMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Atomic Shield monitor";
	}
	States
	{
		Spawn:
			BKTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("AtomicShieldIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class AtomicShieldIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("sfx/shield");
	}
	States
	{
		Spawn:
			BKTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

class InvincibilityMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Invincibility monitor";
	}
	States
	{
		Spawn:
			PINV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("InvincibilityIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class InvincibilityIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_GiveInventory("InvincibilityIconPowerup", 1, AAPTR_TARGET);
	}
	States
	{
		Spawn:
			PINV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}
class InvincibilityIconPowerup : InvulnerabilitySphere
{
	Default
	{
		Powerup.Duration 20*35;	// the standard 20-second invincibility
		Inventory.PickupMessage "";
		Powerup.Type "PowerInvincible";
	}
}
class PowerInvincible : PowerInvulnerable
{
	Default
	{
		Powerup.Duration -20;
		Inventory.Icon "PINVB0";
	}
}

class SuperSneakersMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Super Sneakers monitor";
	}
	States
	{
		Spawn:
			SHTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("SuperSneakersIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class SuperSneakersIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_GiveInventory("SuperSneakersIconPowerup", 1, AAPTR_TARGET);
	}
	States
	{
		Spawn:
			SHTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}
class SuperSneakersIconPowerup : PowerupGiver
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		Inventory.MaxAmount 0;
		Powerup.Type "PowerSpeedShoes";
		Inventory.PickupMessage "";
	}
}
class PowerSpeedShoes : PowerSpeed
{
	Default
	{
		Powerup.Duration -20;
		Speed 1.66;
		Inventory.Icon "SHTVB0";
	}
}

class WhirlwindShieldMonitor : SRB2MonitorTemplate
{
	Default
	{
		Tag "Whirlwind Shield monitor";
	}
	States
	{
		Spawn:
			WHTV A 2;
			MTEX A 1;
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("WhirlwindShieldIcon", flags: SXF_TRANSFERPOINTERS);
			Goto Death2;
	}
}
class WhirlwindShieldIcon : SRB2MonitorIconTemplate
{
	void A_ItemBox()
	{
		A_StartSound("sfx/shield");
	}
	States
	{
		Spawn:
			WHTV B 0 {return ResolveState("See");}
		See:
			#### # 18 A_ChangeVelocity(z: self.Speed);
			#### # 0 A_Stop;
			#### # 18 A_ItemBox;
			Stop;
	}
}

// BlueRingMonitor = BRBX
// EggmanMonitor = EGGB
// GravityMonitor = GBTV
// TeleportMonitor = MIXU
// RandomMonitor = QUES
// RedRingMonitor = RRBX