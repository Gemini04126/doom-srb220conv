class SRB2SonicPlayer : SRB2PlayerTemplate
{
	bool Thokked;
	override void Tick()
	{
		if (player.OnGround)
		{
			self.Thokked = false;
		}
		int buttons = GetPlayerInput(AAPTR_DEFAULT, MODINPUT_BUTTONS);
		int oldbuttons = GetPlayerInput(AAPTR_DEFAULT, MODINPUT_OLDBUTTONS);
		if ((!self.Thokked) && (player.JumpTics) && !(player.onGround) && (player.cmd.buttons & BT_JUMP) && !(player.oldbuttons & BT_JUMP) && (InStateSequence(CurState, ResolveState('Jump'))))
		{
			A_StartSound("sfx/thok");
			A_SpawnItemEx("Thok", flags: SXF_TRANSFERTRANSLATION);
			self.Thokked = true;
			VelFromAngle(self.actionspd);
		}
		Super.Tick();
	}
	Default
	{
		Speed 1.25;
		Player.DisplayName "Sonic";
		Player.JumpZ 12;
		SRB2PlayerTemplate.actionspd 60;
		// Sorry, but you should make a new character class...
		// Unfortunately, due to SRB2's strange naming conventions,
		// you have to copy *all of this*.
	}
	States
	{
		Spawn:
			SON0 A 105;
			Goto Tap;
		Tap:
			SON0 BC 16;
			Loop;
		See:
		Walk:
			SON0 DEFGHIJK 4;
			Loop;
		Jump: // copy Roll or Spring for this. we're using it for a character ability in Tick().
			SON0 LMNO 1;
			Loop;
		Roll:
			SON0 LMNO 1;
			Loop;
		Spring:
			SON0 P -1;
			Loop;
		Run:
			SON0 QRST 2;
			Loop;
		Ability:
			SON0 UV 2;
			Loop;
		Special:
			SON0 WXYZ 6;
			Loop;
		ClimbStop:
			SON0 W -1;
			Loop;
		Climb:
			SON0 XYZY 5;
			Loop;
		Gasp:
			SON0 [ 14;
			Goto Walk;
		Pain:
			SON0 \ -1;
			Goto Spawn;
		Death:
			SON0 ] 8 A_Fall;
			SON0 ] 7;
			SON0 ] -1;
			Loop;
		Teeter:
			SON1 AB 12;
			Loop;
		Fall:
			SON1 CD 2;
			Loop;
		Ride:
			SON1 E -1;
			Loop;
		SuperStand:
			SON0 U -1;
			Loop;
		SuperWalk:
			SON0 UV 7;
			Loop;
		SuperFly:
			SON0 WX 7;
			Loop;
		SuperTeeter:
			SON0 Y 12;
			Loop;
		SuperPain:
			SON0 Z -1;
			Loop;
		Melee:
		Missile:
			SON0 X 8;
			Goto Spawn;
	}
}